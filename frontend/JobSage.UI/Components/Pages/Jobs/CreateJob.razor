@* @page "/jobs/create"
@using JobSage.Domain.Entities
@using JobSage.Domain.Enums
@inject IMediator Mediator
@using MediatR
@using MudBlazor
@inject NavigationManager Nav
<MudPaper Class="pa-4">
    <MudText Typo="Typo.h5">Create Job</MudText>
    <MudForm @ref="form" OnValidSubmit="HandleValidSubmit">
        <MudTextField @bind-Value="job.Title" Label="Title" Required="true" />
        <MudTextField @bind-Value="job.Description" Label="Description" Required="true" />
        <MudSelect T="JobType" @bind-Value="job.JobType" Label="Job Type" Required="true">
            @foreach (var type in Enum.GetValues<JobType>())
            {
                <MudSelectItem Value="@type">@type</MudSelectItem>
            }
        </MudSelect>
        <MudSelect T="JobPriority" @bind-Value="job.Priority" Label="Priority" Required="true">
            @foreach (var priority in Enum.GetValues<JobPriority>())
            {
                <MudSelectItem Value="@priority">@priority</MudSelectItem>
            }
        </MudSelect>
        <MudSelect T="JobStatus" @bind-Value="job.Status" Label="Status" Required="true">
            @foreach (var status in Enum.GetValues<JobStatus>())
            {
                <MudSelectItem Value="@status">@status</MudSelectItem>
            }
        </MudSelect>
        <MudTextField @bind-Value="job.PropertyInfo.PropertyAddress" Label="Property Address" Required="true" />
        <MudTextField @bind-Value="job.PropertyInfo.UnitNumber" Label="Unit Number" />
        <MudTextField @bind-Value="job.PropertyInfo.LocationDetails" Label="Location Details" />
        <MudTextField @bind-Value="job.TenantContact" Label="Tenant Contact" />
        <MudDatePicker @bind-Date="job.Scheduling.DueDate" Label="Due Date" />
        <MudDatePicker @bind-Date="job.Scheduling.ScheduledDate" Label="Scheduled Date" />
        <MudTextField @bind-Value="job.Cost.EstimatedCost" Label="Estimated Cost" />
        <MudTextField @bind-Value="job.Cost.ApprovedBudget" Label="Approved Budget" />
        <MudButton Variant="Variant.Filled" Color="Color.Success" Type="Submit">Create</MudButton>
    </MudForm>
</MudPaper>

@code {
    private MudForm form;
    private Job job = new();

    private async Task HandleValidSubmit()
    {
        await Mediator.Send(new JobSage.Application.Jobs.Commands.CreateJobCommand
        {
            Title = job.Title,
            Description = job.Description,
            JobType = job.JobType,
            Priority = job.Priority,
            Status = job.Status,
            PropertyInfo = job.PropertyInfo,
            Scheduling = job.Scheduling,
            Cost = job.Cost,
            CreatedBy = job.CreatedBy,
            AssignedTo = job.AssignedTo,
            TenantContact = job.TenantContact
        });
        Nav.NavigateTo("/jobs");
    }
} *@
