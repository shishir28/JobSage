@page "/jobs/{Id:guid}"
@using MudBlazor
@rendermode InteractiveServer
@using JobSage.Domain.Entities
@using JobSage.UI.Models
@using JobSage.UI.Services
@inject IJobService JobService
@inject NavigationManager Nav

<MudGrid>
    <MudItem xs="7">
        <MudPaper Class="pa-4">
            <MudText Typo="Typo.h5">Job Details</MudText>
            @if (job != null)
            {
                <MudStack Spacing="2">
                    <MudTextField Value="@job.Title" Label="Title" Disabled="true" ReadOnly="true" />
                    <MudTextField Value="@job.Description" Label="Description" Disabled="true" ReadOnly="true" />
                    <MudTextField Value="@job.JobType.ToString()" Label="Type" Disabled="true" ReadOnly="true" />
                    <MudTextField Value="@job.Priority.ToString()" Label="Priority" Disabled="true" ReadOnly="true" />
                    <MudTextField Value="@job.Status.ToString()" Label="Status" Disabled="true" ReadOnly="true" />
                    <MudTextField Value="@job.Scheduling?.DueDate?.ToShortDateString()" Label="Due Date" Disabled="true"
                        ReadOnly="true" />
                    <MudTextField Value="@job.PropertyInfo?.PropertyAddress" Label="Property Address" Disabled="true"
                        ReadOnly="true" />
                    <MudTextField Value="@job.Cost?.EstimatedCost" Label="Estimated Cost" Disabled="true" ReadOnly="true" />
                    <MudTextField Value="@job.Cost?.ActualCost" Label="Actual Cost" Disabled="true" ReadOnly="true" />
                    <MudTextField Value="@job.Cost?.ApprovedBudget" Label="Approved Budget" Disabled="true"
                        ReadOnly="true" />
                    <MudTextField Value="@job.TenantContact" Label="Tenant Contact" Disabled="true" ReadOnly="true" />
                    <MudTextField Value="@job.Contractor?.Name" Label="Contractor" Disabled="true" ReadOnly="true" />
                    <MudButton Class="mt-4" Variant="Variant.Filled" Color="Color.Primary" OnClick="() => EditJob(job.Id)">
                        Edit</MudButton>
                    <MudButton Class="mt-2" Variant="Variant.Outlined" Color="Color.Default"
                        StartIcon="@Icons.Material.Filled.ArrowBack" OnClick="GoToJobs">
                        Back to Jobs
                    </MudButton>
                </MudStack>
            }
            else
            {
                <MudText>No job found.</MudText>
            }
        </MudPaper>
    </MudItem>
</MudGrid>

@code {
    [Parameter] public Guid Id { get; set; }
    private JobDto? job;

    protected override async Task OnInitializedAsync()
    {
        job = await JobService.GetJobById(Id);
    }

    private void EditJob(Guid id)
    {
        Nav.NavigateTo($"/jobs/edit/{id}");
    }
    private void GoToJobs()
    {
        Nav.NavigateTo("/jobs");
    }
}
